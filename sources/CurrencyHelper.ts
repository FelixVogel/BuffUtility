module CurrencyHelper {

    DEBUG && console.debug('%c‚ñ†', 'color: #0000ff', '[BuffUtility] Module.CurrencyHelper');

    export interface Data {
        'date': string,
        'rates': {
            [name: string]: [number, number]
        },
        'symbols': {
            [name: string]: string
        }
    }

    const raw = `{"date":"2023-02-23","rates":{"AED":[0.5329332612344715,2],"AFN":[12.95763726887542,2],"ALL":[15.75042689035913,2],"AMD":[56.88298896280208,2],"ANG":[0.2617386985170774,2],"AOA":[73.10264678860564,2],"ARS":[28.286757085641465,2],"AUD":[0.21259933081534352,2],"AWG":[0.2615313732617706,2],"AZN":[0.24641878443397605,2],"BAM":[0.2672177743934711,2],"BBD":[0.2932287516913556,2],"BDT":[15.556269250409796,2],"BGN":[0.26716895175749183,2],"BHD":[0.054692566459642274,3],"BIF":[301.7172980650646,2],"BMD":[0.14509376270995442,2],"BND":[0.1945830943485816,2],"BOB":[1.0035336921318425,2],"BRL":[0.7476243069442198,2],"BSD":[0.1452406408921441,2],"BTC":[0.000005951293198117881,7],"BTN":[12.023495996133576,2],"BWP":[1.9210610458000088,2],"BYN":[0.36657006075614634,2],"BYR":[2843.8365749101977,2],"BZD":[0.2927368328632958,2],"CAD":[0.196354521810316,2],"CDF":[296.9339682737656,2],"CHF":[0.13518960551036613,2],"CLF":[0.004212148986444813,4],"CLP":[116.22588551543164,2],"COP":[710.4048858466598,2],"CRC":[81.02873123234625,2],"CUC":[0.14509376270995442,2],"CUP":[3.8449830707167845,2],"CVE":[15.065097668520833,2],"CZK":[3.2403791371713666,2],"DJF":[25.8580131074418,2],"DKK":[1.0181543621315772,2],"DOP":[8.13224821264022,2],"DZD":[19.874722620416176,2],"EGP":[4.452913371138738,2],"ERN":[2.1764054833427284,2],"ETB":[7.80910882688642,2],"EUR":[0.13675808397548092,2],"FJD":[0.3194600462625246,2],"FKP":[0.12028147001811498,2],"GBP":[0.1204335450074957,2],"GEL":[0.3823221303846102,2],"GGP":[0.12028147001811498,2],"GHS":[1.866205737220436,2],"GIP":[0.12028147001811498,2],"GMD":[8.874355014686452,2],"GNF":[1249.77531207511,2],"GTQ":[1.1353371674829758,2],"GYD":[30.64391025825123,2],"HKD":[1.1380228227360862,2],"HNL":[3.580615745067614,2],"HRK":[1.0236062231492595,2],"HTG":[21.679755782883962,2],"HUF":[52.18367841500663,2],"IDR":[2204.633521840676,2],"ILS":[0.524145323516291,2],"IMP":[0.12028147001811498,2],"INR":[12.007882735960345,2],"IQD":[211.96901007113883,2],"IRR":[6144.7183290842595,2],"ISK":[20.908142877187682,2],"JEP":[0.12028147001811498,2],"JMD":[22.40197262595488,2],"JOD":[0.10292987783947391,2],"JPY":[19.57575413194037,2],"KES":[18.36908586246896,2],"KGS":[12.684125203666976,2],"KHR":[589.6775285407284,2],"KMF":[67.1566436666921,2],"KPW":[130.579096909787,2],"KRW":[188.20830375939767,2],"KWD":[0.0445132519950953,3],"KYD":[0.12102762212428521,2],"KZT":[65.26169753433379,2],"LAK":[2448.436594712768,2],"LBP":[2179.910022890568,2],"LKR":[53.00909085687418,2],"LRD":[22.89537404840306,2],"LSL":[2.650828439445298,2],"LTL":[0.42842396428316476,2],"LVL":[0.08776573121402065,3],"LYD":[0.699338583202661,2],"MAD":[1.5099390305110019,2],"MDL":[2.7296010958151755,2],"MGA":[621.6611261864106,2],"MKD":[8.418228785880878,2],"MMK":[304.99664368310306,2],"MNT":[511.25828856557456,2],"MOP":[1.1736881002141357,2],"MRO":[51.798426926463264,2],"MUR":[6.696485262538597,2],"MVR":[2.2271218085107836,2],"MWK":[149.07095023072455,2],"MXN":[2.661244892427459,2],"MYR":[0.6432733758541568,2],"MZN":[9.155489018189098,2],"NAD":[2.6508656376441397,2],"NGN":[66.81124799683597,2],"NIO":[5.306701611092285,2],"NOK":[1.5018032920953006,2],"NPR":[19.23779960619142,2],"NZD":[0.23267295589743253,2],"OMR":[0.05578854574462179,3],"PAB":[0.14522012717954777,2],"PEN":[0.5569843584309034,2],"PGK":[0.5117337068470124,2],"PHP":[7.968258311951205,2],"PKR":[38.01439707053243,2],"PLN":[0.6501374008469701,2],"PYG":[1063.4493866536693,2],"QAR":[0.5282925124128475,2],"RON":[0.672504732513496,2],"RSD":[16.050214012725615,2],"RUB":[10.884207750846464,2],"RWF":[160.117341718245,2],"SAR":[0.5443098927242237,2],"SBD":[1.199449220492597,2],"SCR":[1.9065850658531203,2],"SDG":[85.24269964834025,2],"SEK":[1.5100314789757694,2],"SGD":[0.19463807109833975,2],"SHP":[0.17654278845903998,2],"SLE":[2.901878536393104,2],"SLL":[2865.600603212557,2],"SOS":[82.48635906491386,2],"SRD":[4.833503050115547,2],"STD":[3003.1467049096973,2],"SVC":[1.2706664029970807,2],"SYP":[364.4795543929295,2],"SZL":[2.6527325222484888,2],"THB":[5.018428015057612,2],"TJS":[1.5742901366514124,2],"TMT":[0.5092788992396524,2],"TND":[0.4574075152943403,2],"TOP":[0.34113702312114225,2],"TRY":[2.7391081075388986,2],"TTD":[0.9855173189069966,2],"TWD":[4.405377902245869,2],"TZS":[339.37414331317245,2],"UAH":[5.337476966519707,2],"UGX":[538.6628053021656,2],"USD":[0.14509376270995442,2],"UYU":[5.709749292345295,2],"UZS":[1643.5555021743169,2],"VEF":[353240.7068559016,2],"VES":[3.536063927292838,2],"VND":[3455.406532277233,2],"VUV":[17.255687426817328,2],"WST":[0.39383702429726175,2],"XAF":[89.62223629007046,2],"XAG":[0.006729181522013539,4],"XAU":[0.00007931968870577893,6],"XCD":[0.392123035230797,2],"XDR":[0.10886531544209374,2],"XOF":[89.62139235593426,2],"XPF":[16.286736982203124,2],"YER":[36.32425341710587,2],"ZAR":[2.66048123528654,2],"ZMK":[1306.0174049278314,2],"ZMW":[2.8457887125894836,2],"ZWL":[46.72011309346512,2]},"symbols":{"AED":"ÿØ.ÿ•","AFN":"ÿã","ALL":"L","AMD":"÷è","ANG":"f","AOA":"Kz","ARS":"$","AUD":"A$","AWG":"∆í","AZN":"‚Çº","BAM":"KM","BBD":"Bds$","BDT":"‡ß≥","BGN":"–õ–≤.","BHD":".ÿØ.ÿ®","BIF":"FBu","BMD":"BD$","BND":"B$","BOB":"Bs","BRL":"R$","BSD":"B$","BTC":"‚Çø","BTN":"Nu.","BWP":"P","BYN":"Rbl","BYR":"BYR","BZD":"BZ$","CAD":"C$","CDF":"FC","CHF":"Fr","CLF":"UF","CLP":"CLP$","COP":"Col$","CRC":"‚Ç°","CUC":"CUC$","CUP":"$MN","CVE":"Esc","CZK":"Kƒç","DJF":"Fdj","DKK":"Kr","DOP":"RD$","DZD":"ÿØÿ¨","EGP":"ÿ¨.ŸÖ","ERN":"·äì·âï·çã","ETB":"·â•·à≠","EUR":"‚Ç¨","FJD":"FJ$","FKP":"FK¬£","GBP":"¬£","GEL":"·Éö","GGP":"G¬£","GHS":"GH‚Çµ","GIP":"Gi¬£","GMD":"D","GNF":"GFr","GTQ":"Q","GYD":"GY$","HKD":"Ê∏ØÂÖÉ","HNL":"L","HRK":"kn","HTG":"G","HUF":"Ft","IDR":"Rp","ILS":"‚Ç™","IMP":"I¬£","INR":"‚Çπ","IQD":"ÿπ.ÿØ","IRR":"Ô∑º","ISK":"√çkr","JEP":"J¬£","JMD":"J$","JOD":"ÿØ.ÿß","JPY":"¬•","KES":"/-","KGS":"–õ–≤","KHR":"·üõ","KMF":"CF","KPW":"‚Ç©","KRW":"‚Ç©","KWD":"ÿØ.ŸÉ","KYD":"CI$","KZT":"‚Ç∏","LAK":"‚Ç≠","LBP":"ŸÑ.ŸÑ.","LKR":"‡Æ∞‡ØÇ","LRD":"L$","LSL":"M","LTL":"Lt","LVL":"‚Ñíùìà","LYD":"ŸÑ.ÿØ","MAD":"ÿØÿ±ŸáŸÖ","MDL":"L","MGA":"Ar","MKD":"–î–µ–Ω","MMK":"K","MNT":"‚ÇÆ","MOP":"MOP$","MRO":"UM","MUR":"‚Ç®","MVR":".ﬁÉ","MWK":"MK","MXN":"M$","MYR":"RM","MZN":"MT","NAD":"N$","NGN":"‚Ç¶","NIO":"C$","NOK":"kr","NPR":"‡§∞‡•Ç","NZD":"NZ$","OMR":"ÿ±.ÿπ.","PAB":"B/.","PEN":"S/","PGK":"K","PHP":"‚Ç±","PKR":"‚Ç®","PLN":"z≈Ç","PYG":"‚Ç≤","QAR":"ÿ±.ŸÇ","RON":"lei","RSD":"din","RUB":"‚ÇΩ","RWF":"R‚Ç£","SAR":"SR","SBD":"Si$","SCR":"SR","SDG":"ÿ¨.ÿ≥.","SEK":"kr","SGD":"S$","SHP":"St.¬£","SLL":"Le","SOS":"Sh.so.","SRD":"Sr$","STD":"Db","SVC":"‚Ç°","SYP":"ÿ≥","SZL":"E","THB":"‡∏ø","TJS":"–ÖM","TMT":"T","TND":"ÿØ.ÿ™","TOP":"","TRY":"‚Ç∫","TTD":"TT$","TWD":"Âúì","TZS":"TSh","UAH":"‚Ç¥","UGX":"USh","USD":"$","UYU":"$U","UZS":"–ª–≤","VEF":"Bs.F.","VND":"‚Ç´","VUV":"VT","WST":"ST","XAF":"FCFA","XAG":"","XAU":"","XCD":"","XDR":"","XOF":"CFA","XPF":"‚Ç£","YER":"Ô∑º","ZAR":"R","ZMK":"ZK","ZMW":"ZK","ZWL":"Z$","SLE":"","VES":""}}`;

    let data: Data;

    let fetchDone: boolean = false;
    let recursionBreak: number = 0;

    /**
     * Initialize the CurrencyHelper, this function call should happen <b>ONCE</b>
     *
     * @param fetchNew If we should fetch current active rates
     * @param onFetch callback when the response was received, only will happen if <code>fetchNew</code> is true
     */
    export function initialize(fetchNew: boolean = true, onFetch: (data: Data) => void = null): void {
        DEBUG && console.debug('%c‚ñ†', 'color: #00ff00', '[BuffUtility] Module.CurrencyHelper');

        // If fetchNew is false, we don't plan on loading anything, so we can just set fetchDone to true
        fetchDone = !fetchNew;

        // shouldn't be necessary, but to prevent getting stuck, we kill it after 5 calls
        if (recursionBreak > 5) {
            return;
        } else {
            recursionBreak ++;
        }

        // pre-parse raw to avoid timing errors
        try {
            data = JSON.parse(raw);
        } catch (e) { }

        if (fetchNew) {
            try {
                fetch('https://penguinivogel.github.io/currency-repository/rates.json')
                    .then(r => r.json().then(_pdata => {
                        data = _pdata;

                        console.debug('[CurrencyHelper] Fetched current rates.', _pdata);

                        if (typeof onFetch == 'function') {
                            onFetch(_pdata);
                        }
                    }));
            } catch (_e) {
                console.warn('[CurrencyHelper] Failed to fetch json, using STATIC.', _e);
                initialize(false, null);
            }
        } else {
            try {
                data = JSON.parse(raw);
            } catch (e) {
                console.warn('[CurrencyHelper] Error reading STATIC.', e);
                initialize(true);
            }

            console.debug(`[CurrencyHelper] Read from STATIC.`, data);
        }
    }

    export function getData(): Data {
        if (!fetchDone) {
            console.debug('[CurrencyHelper] Accessed data before fetch was complete.');
        }

        return data;
    }

}
