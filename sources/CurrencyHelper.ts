module CurrencyHelper {

    DEBUG && console.debug('Start.CurrencyHelper');

    export interface Data {
        'date': string,
        'rates': {
            [name: string]: [number, number]
        },
        'symbols': {
            [name: string]: string
        }
    }

    const raw = `{"date":"2022-10-23","rates":{"AED":[0.5070684471730411,2],"AFN":[11.907052572459527,2],"ALL":[16.40387231018798,2],"AMD":[55.077643027809025,2],"ANG":[0.24600906342549994,2],"AOA":[62.493273545111904,2],"ARS":[21.23564374343103,2],"AUD":[0.21644569924053356,2],"AWG":[0.24848826251120612,2],"AZN":[0.23523133685246145,2],"BAM":[0.27381738983872744,2],"BBD":[0.2756051849558112,2],"BDT":[13.834343024841264,2],"BGN":[0.2737496353295529,2],"BHD":[0.052052261684713066,3],"BIF":[282.20204492627914,2],"BMD":[0.1380489725112677,2],"BND":[0.19500685664433753,2],"BOB":[0.943226200948675,2],"BRL":[0.712603150640672,2],"BSD":[0.13650055799478011,2],"BTC":[0.000007197270893166817,7],"BTN":[11.290993857857758,2],"BWP":[1.8446061531173512,2],"BYN":[0.3462494799421455,2],"BYR":[2705.760576282898,2],"BZD":[0.2751432223932572,2],"CAD":[0.1885155826971782,2],"CDF":[283.4146654355131,2],"CHF":[0.1376887817011309,2],"CLF":[0.004866705602177999,4],"CLP":[134.28722816302965,2],"COP":[669.3989529688513,2],"CRC":[84.70177362826517,2],"CUC":[0.1380489725112677,2],"CUP":[3.6582987514691805,2],"CVE":[15.437168051901075,2],"CZK":[3.427348267696386,2],"DJF":[24.299907215519255,2],"DKK":[1.0412553566658957,2],"DOP":[7.360812499755021,2],"DZD":[19.40506557348592,2],"EGP":[2.708171949745193,2],"ERN":[2.0707351476236364,2],"ETB":[7.227027861662091,2],"EUR":[0.1399886553193729,2],"FJD":[0.32075740581983236,2],"FKP":[0.12183170675848427,2],"GBP":[0.12211868350188901,2],"GEL":[0.381069278145699,2],"GGP":[0.12183170675848427,2],"GHS":[1.859824179848465,2],"GIP":[0.12183170675848427,2],"GMD":[7.917164512987868,2],"GNF":[1177.5871948737272,2],"GTQ":[1.07016469385321,2],"GYD":[28.553125974671012,2],"HKD":[1.0836640798629678,2],"HNL":[3.37401482983819,2],"HRK":[1.0550124617900964,2],"HTG":[17.403896808202663,2],"HUF":[57.33507208575816,2],"IDR":[2144.8950625441316,2],"ILS":[0.49155728419768857,2],"IMP":[0.12183170675848427,2],"INR":[11.394772767614912,2],"IQD":[199.22787885269773,2],"IRR":[5846.375579483039,2],"ISK":[19.89338897975708,2],"JEP":[0.12183170675848427,2],"JMD":[20.885992119198658,2],"JOD":[0.09788216762913535,3],"JPY":[20.389153902967703,2],"KES":[16.54387300453171,2],"KGS":[11.404698523231676,2],"KHR":[564.8464918003045,2],"KMF":[69.08667957548721,2],"KPW":[124.2440891190178,2],"KRW":[197.2900331157163,2],"KWD":[0.04280769086473232,3],"KYD":[0.11375044166420752,2],"KZT":[64.59908495015563,2],"LAK":[2362.4824219045286,2],"LBP":[206.3889104626961,2],"LKR":[49.547688535321086,2],"LRD":[21.211282917632357,2],"LSL":[2.5166860877594477,2],"LTL":[0.40762288624129894,2],"LVL":[0.0835044927959038,3],"LYD":[0.6868569971089543,2],"MAD":[1.5052306761060081,2],"MDL":[2.648111637032935,2],"MGA":[582.6531702670815,2],"MKD":[8.62613803777342,2],"MMK":[286.6513065981133,2],"MNT":[463.81363142330946,2],"MOP":[1.103596924505238,2],"MRO":[49.283472407396104,2],"MUR":[6.108720929255893,2],"MVR":[2.122508831884264,2],"MWK":[140.20123845163587,2],"MXN":[2.7500674745318636,2],"MYR":[0.6540815932276848,2],"MZN":[8.811720298187035,2],"NAD":[2.516685527804827,2],"NGN":[60.273629805040606,2],"NIO":[4.90996167670572,2],"NOK":[1.4882973683812664,2],"NPR":[18.065539748658768,2],"NZD":[0.24006444517736283,2],"OMR":[0.05315677217518293,3],"PAB":[0.13650055799478011,2],"PEN":[0.5441543817289046,2],"PGK":[0.48097218201436953,2],"PHP":[8.127640675999617,2],"PKR":[30.146164954792056,2],"PLN":[0.6686644914296145,2],"PYG":[986.3043510153935,2],"QAR":[0.5026019691364212,2],"RON":[0.6878020605210153,2],"RSD":[16.421625111500962,2],"RUB":[8.510772966958756,2],"RWF":[145.55724206110335,2],"SAR":[0.5189683228071198,2],"SBD":[1.1283276003312692,2],"SCR":[2.028048966911721,2],"SDG":[78.6879819459431,2],"SEK":[1.5459266381052477,2],"SGD":[0.19538132629731686,2],"SHP":[0.1901492503047553,2],"SLL":[2337.1697690019196,2],"SOS":[78.4813677899543,2],"SRD":[3.9376414935333646,2],"STD":[2857.3357662895,2],"SVC":[1.1943452702592983,2],"SYP":[346.8522813111225,2],"SZL":[2.511681073365814,2],"THB":[5.250561214519174,2],"TJS":[1.3888901643410816,2],"TMT":[0.48455197190819654,2],"TND":[0.4476981385428525,2],"TOP":[0.3374336943734079,2],"TRY":[2.5672289917625077,2],"TTD":[0.9254041052513104,2],"TWD":[4.4300622277570625,2],"TZS":[318.3194042754775,2],"UAH":[5.041254236756653,2],"UGX":[520.7462971600781,2],"USD":[0.1380489725112677,2],"UYU":[5.631384812574789,2],"UZS":[1520.1267059717482,2],"VND":[3429.827628329,2],"VUV":[17.276818466631465,2],"WST":[0.3927406922942964,2],"XAF":[91.83438516142651,2],"XAG":[0.0071415212511178085,4],"XAU":[0.0000832932499150269,6],"XCD":[0.3730844652349373,2],"XDR":[0.10690443646446891,2],"XOF":[91.83438516142651,2],"XPF":[16.511158355726852,2],"YER":[34.54681472613459,2],"ZAR":[2.496730984920982,2],"ZMK":[1242.6072357896117,2],"ZMW":[2.18196565350344,2],"ZWL":[44.451724632235795,2]},"symbols":{"AED":"ÿØ.ÿ•","AFN":"ÿã","ALL":"L","AMD":"÷è","ANG":"f","AOA":"Kz","ARS":"$","AUD":"A$","AWG":"∆í","AZN":"‚Çº","BAM":"KM","BBD":"Bds$","BDT":"‡ß≥","BGN":"–õ–≤.","BHD":".ÿØ.ÿ®","BIF":"FBu","BMD":"BD$","BND":"B$","BOB":"Bs","BRL":"R$","BSD":"B$","BTC":"‚Çø","BTN":"Nu.","BWP":"P","BYN":"Rbl","BYR":"BYR","BZD":"BZ$","CAD":"C$","CDF":"FC","CHF":"Fr","CLF":"UF","CLP":"CLP$","COP":"Col$","CRC":"‚Ç°","CUC":"CUC$","CUP":"$MN","CVE":"Esc","CZK":"Kƒç","DJF":"Fdj","DKK":"Kr","DOP":"RD$","DZD":"ÿØÿ¨","EGP":"ÿ¨.ŸÖ","ERN":"·äì·âï·çã","ETB":"·â•·à≠","EUR":"‚Ç¨","FJD":"FJ$","FKP":"FK¬£","GBP":"¬£","GEL":"·Éö","GGP":"G¬£","GHS":"GH‚Çµ","GIP":"Gi¬£","GMD":"D","GNF":"GFr","GTQ":"Q","GYD":"GY$","HKD":"Ê∏ØÂÖÉ","HNL":"L","HRK":"kn","HTG":"G","HUF":"Ft","IDR":"Rp","ILS":"‚Ç™","IMP":"I¬£","INR":"‚Çπ","IQD":"ÿπ.ÿØ","IRR":"Ô∑º","ISK":"√çkr","JEP":"J¬£","JMD":"J$","JOD":"ÿØ.ÿß","JPY":"¬•","KES":"/-","KGS":"–õ–≤","KHR":"·üõ","KMF":"CF","KPW":"‚Ç©","KRW":"‚Ç©","KWD":"ÿØ.ŸÉ","KYD":"CI$","KZT":"‚Ç∏","LAK":"‚Ç≠","LBP":"ŸÑ.ŸÑ.","LKR":"‡Æ∞‡ØÇ","LRD":"L$","LSL":"M","LTL":"Lt","LVL":"‚Ñíùìà","LYD":"ŸÑ.ÿØ","MAD":"ÿØÿ±ŸáŸÖ","MDL":"L","MGA":"Ar","MKD":"–î–µ–Ω","MMK":"K","MNT":"‚ÇÆ","MOP":"MOP$","MRO":"UM","MUR":"‚Ç®","MVR":".ﬁÉ","MWK":"MK","MXN":"M$","MYR":"RM","MZN":"MT","NAD":"N$","NGN":"‚Ç¶","NIO":"C$","NOK":"kr","NPR":"‡§∞‡•Ç","NZD":"NZ$","OMR":"ÿ±.ÿπ.","PAB":"B/.","PEN":"S/","PGK":"K","PHP":"‚Ç±","PKR":"‚Ç®","PLN":"z≈Ç","PYG":"‚Ç≤","QAR":"ÿ±.ŸÇ","RON":"lei","RSD":"din","RUB":"‚ÇΩ","RWF":"R‚Ç£","SAR":"SR","SBD":"Si$","SCR":"SR","SDG":"ÿ¨.ÿ≥.","SEK":"kr","SGD":"S$","SHP":"St.¬£","SLL":"Le","SOS":"Sh.so.","SRD":"Sr$","STD":"Db","SVC":"‚Ç°","SYP":"ÿ≥","SZL":"E","THB":"‡∏ø","TJS":"–ÖM","TMT":"T","TND":"ÿØ.ÿ™","TOP":"","TRY":"‚Ç∫","TTD":"TT$","TWD":"Âúì","TZS":"TSh","UAH":"‚Ç¥","UGX":"USh","USD":"$","UYU":"$U","UZS":"–ª–≤","VEF":"Bs.F.","VND":"‚Ç´","VUV":"VT","WST":"ST","XAF":"FCFA","XAG":"","XAU":"","XCD":"","XDR":"","XOF":"CFA","XPF":"‚Ç£","YER":"Ô∑º","ZAR":"R","ZMK":"ZK","ZMW":"ZK","ZWL":"Z$"}}`;

    let data: Data;

    let fetchDone: boolean = false;
    let recursionBreak: number = 0;

    /**
     * Initialize the CurrencyHelper, this function call should happen <b>ONCE</b>
     *
     * @param fetchNew If we should fetch current active rates
     * @param onFetch callback when the response was received, only will happen if <code>fetchNew</code> is true
     */
    export function initialize(fetchNew: boolean = true, onFetch: (data: Data) => void = null): void {
        // If fetchNew is false, we don't plan on loading anything, so we can just set fetchDone to true
        fetchDone = !fetchNew;

        // shouldn't be necessary, but to prevent getting stuck, we kill it after 5 calls
        if (recursionBreak > 5) {
            return;
        } else {
            recursionBreak ++;
        }

        // pre-parse raw to avoid timing errors
        try {
            data = JSON.parse(raw);
        } catch (e) { }

        if (fetchNew) {
            try {
                fetch('https://penguinivogel.github.io/currency-repository/rates.json')
                    .then(r => r.json().then(_pdata => {
                        data = _pdata;

                        console.debug('[CurrencyHelper] Fetched current rates.', _pdata);

                        if (typeof onFetch == 'function') {
                            onFetch(_pdata);
                        }
                    }));
            } catch (_e) {
                console.warn('[CurrencyHelper] Failed to fetch json, using STATIC.', _e);
                initialize(false, null);
            }
        } else {
            try {
                data = JSON.parse(raw);
            } catch (e) {
                console.warn('[CurrencyHelper] Error reading STATIC.', e);
                initialize(true);
            }

            console.debug(`[CurrencyHelper] Read from STATIC.`, data);
        }
    }

    export function getData(): Data {
        if (!fetchDone) {
            console.debug('[CurrencyHelper] Accessed data before fetch was complete.');
        }

        return data;
    }

}
